1. 내 프로젝트를 Git 프로젝트로 만들기
- CREATE을 누른 뒤 디렉토리를 설정하고 생성 버튼 클릭
- 대상디렉토리 문제가 발생했습니다. 메시지 -> 예
- 모두 스테이지 올리기
- footer에 메시지 넣고 커밋 누름.
- 브랜치에 가보면 커밋내용이 나옴.

커밋 정보를 통한 시점 바꾸기.
- 바꿀 시점의 커밋 우클릭
- 이 커밋까지 현재 브랜치를 초기화
- 사용중인 모드 선택 
   - 
   -
   - Hard : 이동하려는 시점의 커밋 이후의 정보를 지움.
      (데이터 보관 방법 : Hard를 하기 전 마지막 커밋에 새로운 브랜치를 생성 하게 되면 하드를 한 브랜치는 지정한 시점으로 이동하며 그 과정이 삭제되지만 새로운 브랜치는 모든 정보를 가지고 유지할 수 있게 된다.)

브랜치 방법 (브랜치 = 계정)
- 브랜치 버튼 클릭
- 새 브랜치 명 입력

Merge 사용 방법
//서로다른 브랜치를 merge하는 것은 두 브랜치 사이에 주인과 손님의 관계가 있다.
- master로 브랜치 변경
- 병합 버튼 클릭
- file3(브랜치) 를 클릭 후 확인
- 병합 버튼 클릭
- file2(브랜치) 를 클릭 후 확인
- 모든 merge가 완료되면 새로운 커밋이 생김.
- fast-forward를 클릭 후 merge시 브랜치가 이동하는 것에서 끝나지 않고 새로운 커밋을 생성함.


2. 로컬에 있는 Git 프로젝트를 SourceTree로 열기
- Add 클릭
- 디렉토리 위치 찾아서 열기


3. 깃허브의 파일 클론하기.
- git hub repository로 이동
- Code 버튼 클릭 후 url 복사
- sourcetree에서 clone클릭
- url 에 깃허브에서 가져온 url붙여넣기
- clone 기본 저장 경로를 안바꾸게 된다면 /문서 밑에 저장됨.

* Git Hub에 Push 하기
- 깃허브 repository 생성 후 url 복사
- sourcetree에서 원격 클릭
- 설정 클릭
- 추가 버튼 클릭
- 원격이름 = checkbox 클릭 , url은 git hub 복사해둔 url 넣기, 사용자명 = github name 후 확인 (깃허브 푸시준비 완료)
- Push 버튼 클릭
- push할 브랜치 선택 후 push

커밋이란 : 작업 내용을 메시지와 함께 기록한다.(GitHub에 저장 X)
branch : 작업 상태를 나눌 수 있다.
merge : 서로 다른 branch를 합친다.
push : branch 단위로 작업한 내용을 GitHub에 업로드
fast-forward : merge할 때 기준 브랜치가 merge하려는 브랜치에서 추가된 부분밖에 없을 때 fast-forward(브랜치 위치만 바뀌게 된다.)
origin/master :  master브랜치이긴 하지만 로컬에 있는 master 브랜치가 아닌 원격 저장소인 origin이라는 곳에 있는 master 브랜치를 의미한다.