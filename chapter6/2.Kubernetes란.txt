- 오케스트레이션 툴
GCP에서 인스턴스를 만들거나 삭제할 때 구글에선 해당 요청을 오케스트레이션 툴로 처리한다.
가상머신을 생성하거나 제거하는 등의 관리를 한다.

- 컨테이너 오케스트레이션 툴
도커 같은 컨테이너들을 전문적으로 오케이스트레이션 하는 툴
대표적인 게 쿠버네티스다. 이 프로젝트는 구글에서 컨테이너 오케스트레이션 툴로 사용하는 쿠버네티스를 오픈소스화 한 프로젝트이다.

- 쿠버네티스의 구성요소
1. 클러스터
	- 노드 (워커 노드) : 애플리케이션을 직접 실행하는 노드. 마스터노드의 관리를 받고 워커노드의 개수가 몇개가 되도 상관없지만 쿠버네티스에서 제공하는 네트워크 플러그인에 따라서 수백에서 수천개까지 워커 노드의 제한이 있다.

	- 마스터 (마스터 노드) : 클러스터 전체를 관리. 직접 애플리케이션을 실행시키진 않는다.
워커 노드에 따라 3~7개로 달라지고 반드시 홀수여야 한다. 홀수가 되어야 클러스터 상태를 관리할 때 컨센서스(합의) 를 이룰 수 있다. 
	
	- 디플로이먼트 : 마스터노드에 생성이 되고 워커 노드에 컨테이너화된 애플리케이션이 떠 있는지 모니터링 한다. 만약 노드가 다운되거나 삭제되어서 애플리케이션이 동작하지 않는 경우 다른 노드에 애플리케이션을 생성한다.

	- 파드 : 하나의 파드에 여러 개의 애플리케이션이 뜰 수 있다. 그리고 쿠버네티스에서 파드부터는 클러스터 내부 IP를 가지게 된다. 이 상태에서는 실행 중인 애플리케이션을 클러스터 외부로 서비스할 수 없다. 클러스터 외부로 서비스하기 위해서는 서비스가 필요하다.

	- 서비스 : 파드를 묶어서 외부에 노출시킨다. 단, 서비스만으로는 간단한 라우팅밖에 지원되지 않는다.

	- 인그레스 : 로드밸런싱이나 https 같은 처리가 필요할 때 사용한다. 클러스터와 서비스 사이에 proxy같은 역할이라고 생각할 수 있다. 혹은 nginx로 이해해도 된다. 클러스터 외부에서 트래픽을 받아서 서비스에 라우팅을 시켜준다.

	- 스케일링 : 단위는 파드로 스케일아웃, 오토스케일링이 존재한다.

* 컨센서스 : 마스터노드끼리 투표를 하는데 마스터노드가 홀수인 이유는 짝수로 할 경우 동률이 나올 수 있기 때문이다.
각각의 노드는 물리적 서버일 수도 있고 가상의 서버일 수도 있다. 어쨋든 네트워크로 구분되는 하나의 서버다.